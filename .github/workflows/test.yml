name: Android App Build (native Gradle, cached)

on:
    workflow_dispatch:
        inputs: {}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 20.x
                  cache: "npm"

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3
              # this step installs command line tools and required SDKs

            - name: Setup Expo CLI (tools)
              uses: expo/expo-github-action@v8
              with:
                  expo-version: latest
                  eas-version: latest
                  token: ${{ secrets.EXPO_TOKEN }}

            # ----- caches -----
            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Cache Gradle wrapper and caches
              uses: actions/cache@v4
              with:
                  # cache both the global gradle caches and the wrapper
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                      android/.gradle
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/android/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/android/gradle.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Cache Android build cache (optional)
              uses: actions/cache@v4
              with:
                  path: ~/.android/build-cache
                  key: ${{ runner.os }}-android-build-cache-${{ hashFiles('**/android/build.gradle', '**/android/app/build.gradle') }}
                  restore-keys: |
                      ${{ runner.os }}-android-build-cache-

            # ----- install JS deps -----
            - name: Install dependencies
              run: npm ci --prefer-offline --no-audit --progress=false

            # ----- ensure android project exists (use committed android/ if present) -----
            - name: Ensure native android project
              run: |
                  if [ -d "./android" ]; then
                    echo "Using committed android/ folder"
                  else
                    echo "android/ folder not found â€” running expo prebuild"
                    npx expo prebuild --platform android
                  fi

            # ----- build with Gradle (native) -----
            - name: Build Android (Gradle assembleRelease)
              working-directory: android
              env:
                  JAVA_HOME: /opt/hostedtoolcache/Temurin/17/x64 # setup-java typically sets it automatically
              run: |
                  # export max workers based on CPU
                  MAX_WORKERS=$(nproc || echo 2)
                  ./gradlew assembleRelease -x lint --no-daemon --parallel --max-workers=$MAX_WORKERS \
                    -Pandroid.injected.testOnly=false

            - name: Collect AAB
              run: |
                  # path may vary by project; adjust if necessary
                  AAB_PATH=$(find android -type f -name "*.aab" | head -n1)
                  if [ -z "$AAB_PATH" ]; then
                    echo "AAB not found, looking for bundle file..."
                    AAB_PATH=android/app/build/outputs/bundle/release/app-release.aab
                  fi
                  if [ ! -f "$AAB_PATH" ]; then
                    echo "ERROR: AAB not found at $AAB_PATH"
                    exit 1
                  fi
                  echo "AAB found at $AAB_PATH"
                  cp "$AAB_PATH" ${{ github.workspace }}/app-release.aab

            - name: Upload AAB artifact
              uses: actions/upload-artifact@v4
              with:
                  name: app-release
                  path: ${{ github.workspace }}/app-release.aab
